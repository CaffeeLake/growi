name: Release Docker Images for RC

on:
  push:
    branches:
      - rc/**


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  build-rc:
    uses: weseek/growi/.github/workflows/reusable-app-build-image.yml@rc/6.0.3-with-codebuild
    with:
      tag-version: latest-rc
    secrets:
      AWS_ROLE_TO_ASSUME_FOR_OIDC: ${{ secrets.AWS_ROLE_TO_ASSUME_FOR_OIDC }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      DOCKER_REGISTRY_ON_GITHUB_PASSWORD: ${{ secrets.DOCKER_REGISTRY_ON_GITHUB_PASSWORD }}

    # runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # permissions:
    #   id-token: write
    #   contents: write

    # steps:
    # - uses: actions/checkout@v3
      # with:
      #   lfs: true

    # - name: Retrieve information from package.json
    #   uses: myrotvorets/info-from-package-json-action@1.2.0
    #   id: package-json

    # - name: Docker meta
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: weseek/growi
    #     tags: |
    #       type=raw,value=${{ steps.package-json.outputs.packageVersion }}
    #       type=raw,value=${{ steps.package-json.outputs.packageVersion }}.{{sha}}

    # - name: Login to docker.io registry
    #   run: |
    #     echo ${{ secrets. DOCKER_REGISTRY_PASSWORD }} | docker login --username wsmoogle --password-stdin

    # - name: Login to GitHub Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: wsmoogle
    #     password: ${{ secrets.DOCKER_REGISTRY_ON_GITHUB_PASSWORD }}

    # - name: Set up QEMU
    #   if: ${{ matrix.platform == 'linux/arm64' }}
    #   uses: docker/setup-qemu-action@v1

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    # - name: Build and push
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./packages/app/docker/Dockerfile
    #     platforms: ${{ matrix.platform }}
    #     push: true
    #     builder: ${{ steps.buildx.outputs.name }}
    #     cache-from: type=gha
    #     cache-to: type=gha,mode=max
    #     tags: ${{ steps.meta.outputs.tags }}




    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-region: ap-northeast-1
    #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_FOR_OIDC }}
    #     role-session-name: SessionForReleaseGROWI-RC

    # - name: Run CodeBuild
    #   uses: aws-actions/aws-codebuild-run-build@v1
    #   with:
    #     project-name: growi-official-image-builder
    #     env-vars-for-codebuild: |
    #       TAGS
    #   env:
    #     TAGS: ${{ steps.meta.outputs.tags }}
