{"version":3,"file":"hackmd-agent.js","sources":["../../../node_modules/penpal/lib/constants.js","../../../node_modules/penpal/lib/errorCodes.js","../../../node_modules/penpal/lib/createDestructor.js","../../../node_modules/penpal/lib/errorSerialization.js","../../../node_modules/penpal/lib/connectCallReceiver.js","../../../node_modules/penpal/lib/generateId.js","../../../node_modules/penpal/lib/connectCallSender.js","../../../node_modules/penpal/lib/createLogger.js","../../../node_modules/penpal/lib/connectToParent.js","../../../node_modules/throttle-debounce/esm/index.js","../src/hackmd-agent.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DATA_CLONE_ERROR = exports.MESSAGE = exports.REJECTED = exports.FULFILLED = exports.REPLY = exports.CALL = exports.HANDSHAKE_REPLY = exports.HANDSHAKE = void 0;\nconst HANDSHAKE = 'handshake';\nexports.HANDSHAKE = HANDSHAKE;\nconst HANDSHAKE_REPLY = 'handshake-reply';\nexports.HANDSHAKE_REPLY = HANDSHAKE_REPLY;\nconst CALL = 'call';\nexports.CALL = CALL;\nconst REPLY = 'reply';\nexports.REPLY = REPLY;\nconst FULFILLED = 'fulfilled';\nexports.FULFILLED = FULFILLED;\nconst REJECTED = 'rejected';\nexports.REJECTED = REJECTED;\nconst MESSAGE = 'message';\nexports.MESSAGE = MESSAGE;\nconst DATA_CLONE_ERROR = 'DataCloneError';\nexports.DATA_CLONE_ERROR = DATA_CLONE_ERROR;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ERR_NO_IFRAME_SRC = exports.ERR_NOT_IN_IFRAME = exports.ERR_CONNECTION_TIMEOUT = exports.ERR_CONNECTION_DESTROYED = void 0;\nconst ERR_CONNECTION_DESTROYED = 'ConnectionDestroyed';\nexports.ERR_CONNECTION_DESTROYED = ERR_CONNECTION_DESTROYED;\nconst ERR_CONNECTION_TIMEOUT = 'ConnectionTimeout';\nexports.ERR_CONNECTION_TIMEOUT = ERR_CONNECTION_TIMEOUT;\nconst ERR_NOT_IN_IFRAME = 'NotInIframe';\nexports.ERR_NOT_IN_IFRAME = ERR_NOT_IN_IFRAME;\nconst ERR_NO_IFRAME_SRC = 'NoIframeSrc';\nexports.ERR_NO_IFRAME_SRC = ERR_NO_IFRAME_SRC;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = () => {\n  const callbacks = [];\n  let destroyed = false;\n  return {\n    destroy() {\n      destroyed = true;\n      callbacks.forEach(callback => {\n        callback();\n      });\n    },\n\n    onDestroy(callback) {\n      destroyed ? callback() : callbacks.push(callback);\n    }\n\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserializeError = exports.serializeError = void 0;\n\n/**\n * Converts an error object into a plain object.\n * @param {Error} Error object.\n * @returns {Object}\n */\nconst serializeError = (_ref) => {\n  let name = _ref.name,\n      message = _ref.message,\n      stack = _ref.stack;\n  return {\n    name,\n    message,\n    stack\n  };\n};\n/**\n * Converts a plain object into an error object.\n * @param {Object} Object with error properties.\n * @returns {Error}\n */\n\n\nexports.serializeError = serializeError;\n\nconst deserializeError = obj => {\n  const deserializedError = new Error();\n  Object.keys(obj).forEach(key => deserializedError[key] = obj[key]);\n  return deserializedError;\n};\n\nexports.deserializeError = deserializeError;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _errorSerialization = require(\"./errorSerialization\");\n\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n * @param {Object} info Information about the local and remote windows.\n * @param {Object} methods The keys are the names of the methods that can be called by the remote\n * while the values are the method functions.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Function} A function that may be called to disconnect the receiver.\n */\nvar _default = (info, methods, log) => {\n  const localName = info.localName,\n        local = info.local,\n        remote = info.remote,\n        originForSending = info.originForSending,\n        originForReceiving = info.originForReceiving;\n  let destroyed = false;\n  log(`${localName}: Connecting call receiver`);\n\n  const handleMessageEvent = event => {\n    if (event.source !== remote || event.data.penpal !== _constants.CALL) {\n      return;\n    }\n\n    if (event.origin !== originForReceiving) {\n      log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n      return;\n    }\n\n    const _event$data = event.data,\n          methodName = _event$data.methodName,\n          args = _event$data.args,\n          id = _event$data.id;\n    log(`${localName}: Received ${methodName}() call`);\n\n    const createPromiseHandler = resolution => {\n      return returnValue => {\n        log(`${localName}: Sending ${methodName}() reply`);\n\n        if (destroyed) {\n          // It's possible to throw an error here, but it would need to be thrown asynchronously\n          // and would only be catchable using window.onerror. This is because the consumer\n          // is merely returning a value from their method and not calling any function\n          // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n          // the value of doing so is questionable. Instead, we'll just log a message.\n          log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n          return;\n        }\n\n        const message = {\n          penpal: _constants.REPLY,\n          id,\n          resolution,\n          returnValue\n        };\n\n        if (resolution === _constants.REJECTED && returnValue instanceof Error) {\n          message.returnValue = (0, _errorSerialization.serializeError)(returnValue);\n          message.returnValueIsError = true;\n        }\n\n        try {\n          remote.postMessage(message, originForSending);\n        } catch (err) {\n          // If a consumer attempts to send an object that's not cloneable (e.g., window),\n          // we want to ensure the receiver's promise gets rejected.\n          if (err.name === _constants.DATA_CLONE_ERROR) {\n            remote.postMessage({\n              penpal: _constants.REPLY,\n              id,\n              resolution: _constants.REJECTED,\n              returnValue: (0, _errorSerialization.serializeError)(err),\n              returnValueIsError: true\n            }, originForSending);\n          }\n\n          throw err;\n        }\n      };\n    };\n\n    new Promise(resolve => resolve(methods[methodName].apply(methods, args))).then(createPromiseHandler(_constants.FULFILLED), createPromiseHandler(_constants.REJECTED));\n  };\n\n  local.addEventListener(_constants.MESSAGE, handleMessageEvent);\n  return () => {\n    destroyed = true;\n    local.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nlet id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\n\nvar _default = () => ++id;\n\nexports.default = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _errorCodes = require(\"./errorCodes\");\n\nvar _generateId = _interopRequireDefault(require(\"./generateId\"));\n\nvar _errorSerialization = require(\"./errorSerialization\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nvar _default = (callSender, info, methodNames, destroyConnection, log) => {\n  const localName = info.localName,\n        local = info.local,\n        remote = info.remote,\n        originForSending = info.originForSending,\n        originForReceiving = info.originForReceiving;\n  let destroyed = false;\n  log(`${localName}: Connecting call sender`);\n\n  const createMethodProxy = methodName => {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      log(`${localName}: Sending ${methodName}() call`); // This handles the case where the iframe has been removed from the DOM\n      // (and therefore its window closed), the consumer has not yet\n      // called destroy(), and the user calls a method exposed by\n      // the remote. We detect the iframe has been removed and force\n      // a destroy() immediately so that the consumer sees the error saying\n      // the connection has been destroyed. We wrap this check in a try catch\n      // because Edge throws an \"Object expected\" error when accessing\n      // contentWindow.closed on a contentWindow from an iframe that's been\n      // removed from the DOM.\n\n      let iframeRemoved;\n\n      try {\n        if (remote.closed) {\n          iframeRemoved = true;\n        }\n      } catch (e) {\n        iframeRemoved = true;\n      }\n\n      if (iframeRemoved) {\n        destroyConnection();\n      }\n\n      if (destroyed) {\n        const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n        error.code = _errorCodes.ERR_CONNECTION_DESTROYED;\n        throw error;\n      }\n\n      return new Promise((resolve, reject) => {\n        const id = (0, _generateId.default)();\n\n        const handleMessageEvent = event => {\n          if (event.source !== remote || event.data.penpal !== _constants.REPLY || event.data.id !== id) {\n            return;\n          }\n\n          if (event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n          }\n\n          log(`${localName}: Received ${methodName}() reply`);\n          local.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n          let returnValue = event.data.returnValue;\n\n          if (event.data.returnValueIsError) {\n            returnValue = (0, _errorSerialization.deserializeError)(returnValue);\n          }\n\n          (event.data.resolution === _constants.FULFILLED ? resolve : reject)(returnValue);\n        };\n\n        local.addEventListener(_constants.MESSAGE, handleMessageEvent);\n        remote.postMessage({\n          penpal: _constants.CALL,\n          id,\n          methodName,\n          args\n        }, originForSending);\n      });\n    };\n  };\n\n  methodNames.reduce((api, methodName) => {\n    api[methodName] = createMethodProxy(methodName);\n    return api;\n  }, callSender);\n  return () => {\n    destroyed = true;\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = debug => {\n  return function () {\n    if (debug) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      console.log('[Penpal]', ...args); // eslint-disable-line no-console\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _errorCodes = require(\"./errorCodes\");\n\nvar _createDestructor2 = _interopRequireDefault(require(\"./createDestructor\"));\n\nvar _connectCallReceiver = _interopRequireDefault(require(\"./connectCallReceiver\"));\n\nvar _connectCallSender = _interopRequireDefault(require(\"./connectCallSender\"));\n\nvar _createLogger = _interopRequireDefault(require(\"./createLogger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {Object} Parent\n * @property {Promise} promise A promise which will be resolved once a connection has\n * been established.\n */\n\n/**\n * Attempts to establish communication with the parent window.\n * @param {Object} options\n * @param {string} [options.parentOrigin=*] Valid parent origin used to restrict communication.\n * @param {Object} [options.methods={}] Methods that may be called by the parent window.\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\n * for the parent to respond before rejecting the connection promise.\n * @return {Parent}\n */\nvar _default = function _default() {\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$parentOrigin = _ref.parentOrigin,\n      parentOrigin = _ref$parentOrigin === void 0 ? '*' : _ref$parentOrigin,\n      _ref$methods = _ref.methods,\n      methods = _ref$methods === void 0 ? {} : _ref$methods,\n      timeout = _ref.timeout,\n      debug = _ref.debug;\n\n  const log = (0, _createLogger.default)(debug);\n\n  if (window === window.top) {\n    const error = new Error('connectToParent() must be called within an iframe');\n    error.code = _errorCodes.ERR_NOT_IN_IFRAME;\n    throw error;\n  }\n\n  const _createDestructor = (0, _createDestructor2.default)(),\n        destroy = _createDestructor.destroy,\n        onDestroy = _createDestructor.onDestroy;\n\n  const child = window;\n  const parent = child.parent;\n  const promise = new Promise((resolveConnectionPromise, reject) => {\n    let connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(() => {\n        const error = new Error(`Connection to parent timed out after ${timeout}ms`);\n        error.code = _errorCodes.ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    }\n\n    const handleMessageEvent = event => {\n      // Under niche scenarios, we get into this function after\n      // the iframe has been removed from the DOM. In Edge, this\n      // results in \"Object expected\" errors being thrown when we\n      // try to access properties on window (global properties).\n      // For this reason, we try to access a global up front (clearTimeout)\n      // and if it fails we can assume the iframe has been removed\n      // and we ignore the message event.\n      try {\n        clearTimeout();\n      } catch (e) {\n        return;\n      }\n\n      if (event.source !== parent || event.data.penpal !== _constants.HANDSHAKE_REPLY) {\n        return;\n      }\n\n      if (parentOrigin !== '*' && parentOrigin !== event.origin) {\n        log(`Child received handshake reply from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\n        return;\n      }\n\n      log('Child: Received handshake reply');\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n      const info = {\n        localName: 'Child',\n        local: child,\n        remote: parent,\n        originForSending: event.origin === 'null' ? '*' : event.origin,\n        originForReceiving: event.origin\n      };\n      const callSender = {};\n      const destroyCallReceiver = (0, _connectCallReceiver.default)(info, methods, log);\n      onDestroy(destroyCallReceiver);\n      const destroyCallSender = (0, _connectCallSender.default)(callSender, info, event.data.methodNames, destroy, log);\n      onDestroy(destroyCallSender);\n      clearTimeout(connectionTimeoutId);\n      resolveConnectionPromise(callSender);\n    };\n\n    child.addEventListener(_constants.MESSAGE, handleMessageEvent);\n    onDestroy(() => {\n      child.removeEventListener(_constants.MESSAGE, handleMessageEvent);\n      const error = new Error('Connection destroyed');\n      error.code = _errorCodes.ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n    log('Child: Sending handshake');\n    parent.postMessage({\n      penpal: _constants.HANDSHAKE,\n      methodNames: Object.keys(methods)\n    }, parentOrigin);\n  });\n  return {\n    promise,\n    destroy\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle (delay, callback, options) {\n  var _ref = options || {},\n      _ref$noTrailing = _ref.noTrailing,\n      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n      _ref$noLeading = _ref.noLeading,\n      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n      _ref$debounceMode = _ref.debounceMode,\n      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n\n\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel(options) {\n    var _ref2 = options || {},\n        _ref2$upcomingOnly = _ref2.upcomingOnly,\n        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\n\nfunction debounce (delay, callback, options) {\n  var _ref = options || {},\n      _ref$atBegin = _ref.atBegin,\n      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\nexport { debounce, throttle };\n//# sourceMappingURL=index.js.map\n","/**\n * GROWI agent for HackMD\n *\n * This file will be transpiled as a single JS\n *  and should be load from HackMD head via 'routes/hackmd.js' route\n *\n * USAGE:\n *  <script src=\"${hostname of GROWI}/_hackmd/load-agent\"></script>\n *\n * @author Yuki Takei <yuki@weseek.co.jp>\n */\nimport connectToParent from 'penpal/lib/connectToParent';\nimport { debounce } from 'throttle-debounce';\n\nconst DEBUG_PENPAL = false;\n\n/* eslint-disable no-console  */\n\nconst allowedOrigin = '<%= origin %>'; // will be replaced by ejs\n\n\n/**\n * return the value of CodeMirror\n */\nfunction getValueOfCodemirror() {\n  // get CodeMirror instance\n  const editor = window.editor;\n  return editor.doc.getValue();\n}\n\n/**\n * set the specified document to CodeMirror\n * @param {string} value\n */\nfunction setValueToCodemirror(value) {\n  // get CodeMirror instance\n  const editor = window.editor;\n  editor.doc.setValue(value);\n}\n\n/**\n * set the specified document to CodeMirror on window loaded\n * @param {string} value\n */\nfunction setValueToCodemirrorOnInit(newValue) {\n  if (window.cmClient != null) {\n    setValueToCodemirror(newValue);\n    return;\n  }\n\n  const intervalId = setInterval(() => {\n    if (window.cmClient != null) {\n      clearInterval(intervalId);\n      setValueToCodemirror(newValue);\n    }\n  }, 250);\n\n}\n\n/**\n * postMessage to GROWI to notify body changes\n * @param {string} body\n */\nfunction postParentToNotifyBodyChanges(body) {\n  window.growi.notifyBodyChanges(body);\n}\n// generate debounced function\nconst debouncedPostParentToNotifyBodyChanges = debounce(800, postParentToNotifyBodyChanges);\n\n/**\n * postMessage to GROWI to save with shortcut\n * @param {string} document\n */\nfunction postParentToSaveWithShortcut(document) {\n  window.growi.saveWithShortcut(document);\n}\n\nfunction addEventListenersToCodemirror() {\n  // get CodeMirror instance\n  const codemirror = window.CodeMirror;\n  // get CodeMirror editor instance\n  const editor = window.editor;\n\n  // e.g. 404 not found\n  if (codemirror == null || editor == null) {\n    return;\n  }\n\n  // == change event\n  editor.on('change', (cm, change) => {\n    if (change.origin === 'ignoreHistory') {\n      // do nothing because this operation triggered by other user\n      return;\n    }\n    debouncedPostParentToNotifyBodyChanges(cm.doc.getValue());\n  });\n\n  // == save event\n  // Reset save commands and Cmd-S/Ctrl-S shortcuts that initialized by HackMD\n  codemirror.commands.save = function(cm) {\n    postParentToSaveWithShortcut(cm.doc.getValue());\n  };\n  delete editor.options.extraKeys['Cmd-S'];\n  delete editor.options.extraKeys['Ctrl-S'];\n}\n\nfunction connectToParentWithPenpal() {\n  const connection = connectToParent({\n    parentOrigin: allowedOrigin,\n    // Methods child is exposing to parent\n    methods: {\n      getValue() {\n        return getValueOfCodemirror();\n      },\n      setValue(newValue) {\n        setValueToCodemirror(newValue);\n      },\n      setValueOnInit(newValue) {\n        setValueToCodemirrorOnInit(newValue);\n      },\n    },\n    debug: DEBUG_PENPAL,\n  });\n  connection.promise\n    .then((parent) => {\n      window.growi = parent;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\n/**\n * main\n */\n(function() {\n  // check HackMD is in iframe\n  if (window === window.parent) {\n    console.log('[GROWI] Loading agent for HackMD is not processed because currently not in iframe');\n    return;\n  }\n\n  console.log('[HackMD] Loading GROWI agent for HackMD...');\n\n  window.addEventListener('load', () => {\n    addEventListenersToCodemirror();\n  });\n\n  connectToParentWithPenpal();\n\n  console.log('[HackMD] GROWI agent for HackMD has successfully loaded.');\n}());\n"],"names":["constants","HANDSHAKE","HANDSHAKE_REPLY","CALL","REPLY","FULFILLED","REJECTED","MESSAGE","DATA_CLONE_ERROR","errorCodes","ERR_CONNECTION_DESTROYED","ERR_CONNECTION_TIMEOUT","ERR_NOT_IN_IFRAME","ERR_NO_IFRAME_SRC","exports","_default","callbacks","destroyed","callback","module","errorSerialization","serializeError","_ref","name","message","stack","deserializeError","obj","deserializedError","key","_constants","require$$0","_errorSerialization","require$$1","info","methods","log","localName","local","remote","originForSending","originForReceiving","handleMessageEvent","event","_event$data","methodName","args","id","createPromiseHandler","resolution","returnValue","err","resolve","_errorCodes","_generateId","_interopRequireDefault","require$$2","require$$3","callSender","methodNames","destroyConnection","createMethodProxy","_len","_key","iframeRemoved","error","reject","api","debug","_createDestructor2","_connectCallReceiver","_connectCallSender","require$$4","_createLogger","require$$5","_ref$parentOrigin","parentOrigin","_ref$methods","timeout","_createDestructor","destroy","onDestroy","child","parent","resolveConnectionPromise","connectionTimeoutId","destroyCallReceiver","destroyCallSender","throttle","delay","options","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","cancel","_ref2","_ref2$upcomingOnly","upcomingOnly","wrapper","arguments_","self","elapsed","exec","clear","debounce","_ref$atBegin","atBegin","DEBUG_PENPAL","allowedOrigin","getValueOfCodemirror","setValueToCodemirror","value","setValueToCodemirrorOnInit","newValue","intervalId","postParentToNotifyBodyChanges","body","debouncedPostParentToNotifyBodyChanges","postParentToSaveWithShortcut","document","addEventListenersToCodemirror","codemirror","editor","cm","change","connectToParentWithPenpal","connectToParent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}